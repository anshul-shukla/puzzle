"use strict";angular.module("puzzleApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","ngMaterial"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/game",{templateUrl:"views/game.html",controller:"GameCtrl",controllerAs:"game"}).otherwise({redirectTo:"/"})}]),angular.module("puzzleApp").service("service",[function(a,b){var c={};return c.isBot=!1,c.resume=!1,c.words=["the","of","and","to","in","is","you","that","it","he","was","for","on","are","as","with","his","they","at","be","this","have","from","or","one","had","by","word","but","not","what","all","were","we","when","your","can","said","there","use","an","each","which","she","do","how","their","if","will","up","other","about","out","many","then","them","these","so","some","her","would","make","like","him","into","time","has","look","two","more","write","go","see","number","no","way","could","people","my","than","first","water","been","call","who","oil","its","now","find","long","down","day","did","get","come","made","may","part"],c.players=[{name:"Anshul",score:0,active:!0,words:[],avator:"https://www.gravatar.com/avatar/1be6d1f474f79a6bb38696f3f69b879d?s=328&d=identicon&r=PG"}],c}]),angular.module("puzzleApp").controller("MainCtrl",["$scope","service","$location",function(a,b,c){localStorage.getItem("hasSavedGame")&&(a.resumebutton=!0),a.players=b.players,a.isBot=b.isBot,a.add=function(c){b.players.push({name:a.name,score:0,active:!1,words:[],pass:!1,avator:a.avator[a.players.length-1]}),a.name=null,localStorage.removeItem("playersList"),localStorage.setItem("playersList",JSON.stringify(a.players))},a.addBot=function(){b.players.push({name:"bot",score:0,active:!1,words:[],pass:!1,avator:"https://www.gravatar.com/avatar/d4ab75d77a9a82e179397fd7964dc36e?s=328&d=identicon&r=PG"}),a.isBot=!0,b.isBot=!0,localStorage.removeItem("playersList")},a.clearPlayers=function(){localStorage.removeItem("playersList"),window.location.reload()},a.resume=function(){b.resume=!0,c.path("/game")},a.startGame=function(){b.resume=!1,b.players.map(function(a){a.score=0,a.active=!1,a.words=[],a.pass=!1}),c.path("/game")},a.avator=["https://i.stack.imgur.com/DVW9g.jpg?s=328&g=1","https://i.stack.imgur.com/vXG1F.png?s=328&g=1","https://i.stack.imgur.com/203qt.png?s=328&g=1","https://i.stack.imgur.com/wjb79.jpg?s=328&g=1"]}]),angular.module("puzzleApp").controller("GameCtrl",["$scope","service","$mdToast","$location","$mdDialog",function(a,b,c,d,e){function f(){q(),v()}function g(){if(localStorage.getItem("hasSavedGame")){var c=JSON.parse(localStorage.getItem("hasSavedGame"));b.isBot=!1,a.isBot=!1,a.players=c.players,b.players=a.players,a.word=c.word,a.gridData=c.gridData,a.activePlayer=a.players.filter(function(a){return a.name===c.activePlayer.name?a:void 0})[0],a.activeGridList=c.activeGridList,a.insertedWords=c.insertedWords,a.detectedWords=c.detectedWords,a.isOver=c.isOver}}function h(){return a.players.filter(function(a){return a.pass?void 0:a})}function i(b){a.isOver=!0,a.showAlert(event,b)}function j(){a.activePlayer.active=!1;var b=a.players.map(function(a){return a.name}).indexOf(a.activePlayer.name);b<a.players.length-1?a.activePlayer=a.players[b+1]:b===a.players.length-1&&(a.activePlayer=a.players[0]),a.activePlayer.active=!0}function k(b,c){console.log(b),a.activeGridList.push(b),b.active=!0}function l(b){return D(b.word+" Right ","success"),a.activePlayer.pass=!1,a.activePlayer.words.push(b.word),a.activePlayer.score+=b.word.length,a.detectedWords.push(b.word),a.detectedWords.length===a.insertedWords.length?(i("Congratulations !!!, You guys detected all words."),!1):(a.activeGridList.map(function(a){a.active=!1}),a.activeGridList=[],void j())}function m(){var b=a.botData.filter(function(b){return-1===a.detectedWords.indexOf(b.word)?b:void 0})[0];console.log("botWord===>"+b.word);a.gridData.filter(function(a){for(var c=0;c<b.gridList.length;c++)a.x===b.gridList[c].x&&a.y===b.gridList[c].y&&k(a,b)});setTimeout(function(){l(b)},4e3)}function n(b){switch(a.activeGridList.length){case 0:return!0;case 1:return o(b);default:return p(b)}}function o(b){var c=a.activeGridList[0].x,d=a.activeGridList[0].y,e=[[c+1,d],[c-1,d],[c,d+1],[c,d-1],[c+1,d+1],[c-1,d-1],[c+1,d-1],[c-1,d+1]];return e.filter(function(a){return a[0]===b.x&&a[1]===b.y?b:void 0})[0]}function p(b){var c=a.activeGridList[0].x-a.activeGridList[1].x,d=a.activeGridList[0].y-a.activeGridList[1].y;return a.activeGridList[a.activeGridList.length-1].x-b.x===c&&a.activeGridList[a.activeGridList.length-1].y-b.y===d?!0:!1}function q(){for(var b=0;15>b;b++)for(var c=0;15>c;c++){var d={};d.x=c,d.y=b,d.value=null,d.active=!1,a.gridData.push(d)}}function r(){return{x:Math.floor(15*Math.random())+0,y:Math.floor(15*Math.random())+0}}function s(){return a.word[Math.floor(Math.random()*a.word.length)]}function t(){return a.alphabets[Math.floor(Math.random()*a.alphabets.length)]}function u(){return Math.floor(11*Math.random())+10}function v(){for(var b=u(),c=0;b>c;c++){var d=x(),e=z(d);w(e,d)}a.gridData.map(function(a){a.value||(a.value=t())})}function w(c,d){for(var e=0;e<c.length;e++)$("div[data-x='"+c[e].x+"'][data-y='"+c[e].y+"']").html(d[e]),c[e].value=d[e];b.isBot&&a.botData.push({gridList:c,word:d})}function x(){for(var a=null;!a;)a=y(s());return a}function y(b){return-1!==a.insertedWords.indexOf(b)?!1:(a.insertedWords.push(b),b)}function z(a){for(var b=null;!b;)b=A(a,r());return b}function A(a,b){function c(){var a=d();return-1===f.indexOf(a)?(f.push(a),a):4===f.length?!1:(c(),!1)}function d(){return e[Math.floor(Math.random()*e.length)]}for(var e=["left","right","top","bottom"],f=[],g=null;!g;){var h=c();if(!h)return!1;g=B(a,b,h)}return g}function B(a,b,c){var d=a.length,e=[];switch(c){case"right":if(b.x+d<15){for(var f=b.x;f<b.x+d;f++){if(!C([f,b.y]).length)return!1;e.push(C([f,b.y])[0])}return e}return!1;case"left":if(b.x-d>0){for(var f=b.x;f>b.x-d;f--){if(!C([f,b.y]).length)return!1;e.push(C([f,b.y])[0])}return e}return!1;case"top":if(b.y-d>0){for(var f=b.y;f>b.y-d;f--){if(!C([b.x,f]).length)return!1;e.push(C([b.x,f])[0])}return e}return!1;case"bottom":if(b.y+d<15){for(var f=b.y;f<b.y+d;f++){if(!C([b.x,f]).length)return!1;e.push(C([b.x,f])[0])}return e}return!1;default:return!1}return!1}function C(b){return a.gridData.filter(function(a){return a.x===b[0]&&a.y===b[1]&&null===a.value?a:void 0})}function D(b,d){var e=a.getToastPosition();c.show(c.simple().textContent(b).position(e).hideDelay(3e3).theme(d+"-toast"))}function E(){var b=a.toastPosition;b.bottom&&F.top&&(b.top=!1),b.top&&F.bottom&&(b.bottom=!1),b.right&&F.left&&(b.left=!1),b.left&&F.right&&(b.right=!1),F=angular.extend({},b)}a.alphabets="abcdefghijklmnopqrstuvwxyz".split(""),localStorage.getItem("hasSavedGame")&&(a.resumeButton=!0),b.resume?g():(b.players.length<2&&d.path("/"),a.players=b.players,a.word=b.words,a.gridData=[],a.activePlayer=a.players[0],a.activeGridList=[],a.insertedWords=[],a.detectedWords=[],a.isOver=!1,b.isBot&&(a.botData=[],a.isBoat=b.isBot),f()),a.resume=function(){g()},a.save=function(){if(b.isBot)D("You can't save Bot game.","error");else{var c={players:a.players,word:a.word,gridData:a.gridData,activePlayer:a.activePlayer,activeGridList:a.activeGridList,insertedWords:a.insertedWords,detectedWords:a.detectedWords,isOver:a.isOver};localStorage.setItem("hasSavedGame",JSON.stringify(c)),a.resumeButton=!0,D("Your game is saved.","success")}},a.pass=function(){a.activePlayer.pass=!0;var c=h();c.length?(j(),D("Successfully passed.","success")):i("All of you passed your turn once. Now It's over for you guys."),b.isBot&&setTimeout(function(){m()},500)},a.submit=function(){if(!a.isOver&&a.detectedWords.length<a.insertedWords.length){var c="";if(a.activeGridList.map(function(a){c+=a.value}),!c)return void D("Please select your word.","error");if(-1!==a.detectedWords.indexOf(c))return a.activeGridList.map(function(a){a.active=!1}),a.activeGridList=[],void D("Alredy detected.","error");if(a.activePlayer.pass=!1,-1!==a.word.indexOf(c)){if(D(c+" Right ","success"),a.activePlayer.words.push(c),a.activePlayer.score+=c.length,a.detectedWords.push(c),a.detectedWords.length===a.insertedWords.length)return i("Congratulations !!!, You guys detected all words."),!1}else D(c+" Wrong ","error");a.activeGridList.map(function(a){a.active=!1}),a.activeGridList=[],j(),b.isBot&&setTimeout(function(){m()},500)}else i("No Use !!!. Its already over.")},a.selectGrid=function(b){console.log(this.grid),n(this.grid)&&(a.activeGridList.push(this.grid),this.grid.active=!0)};var F={bottom:!1,top:!0,left:!1,right:!0};a.toastPosition=angular.extend({},F),a.getToastPosition=function(){return E(),Object.keys(a.toastPosition).filter(function(b){return a.toastPosition[b]}).join(" ")},a.go=function(a){d.path(a)},a.showAlert=function(a,b){e.show(e.alert().parent(angular.element(document.querySelector("body"))).clickOutsideToClose(!0).title("Game Over !!!").textContent(b).ariaLabel("Alert Dialog Demo").targetEvent(a))}}]),angular.module("puzzleApp").run(["$templateCache",function(a){a.put("views/game.html",'<div ng-controller="GameCtrl" class="gameContainer"> <div class="playersContainer animated fadeIn"> <md-content class="player-content"> <md-list flex> <md-subheader class="md-no-sticky">Player List</md-subheader> <span ng-repeat="p in players track by $index"> <md-divider></md-divider> <md-list-item class="md-3-line" ng-class="p.active ? \'active\' : \'\'"> <img class="md-avatar" src="{{p.avator}}"> <div class="md-list-item-text" layout="column"> <h3>{{p.name}}</h3> <h4>{{p.score}}</h4> <p> <span class="correctWords animated bounceIn" ng-repeat="w in p.words track by $index">{{w}}</span> </p> </div> </md-list-item> </span> </md-list></md-content> <md-card class="player game" md-theme="{{ showDarkTheme ? \'dark-grey\' : \'default\' }}" md-theme-watch ng-repeat="p in players track by $index"> <img src="{{p.avator}}"> <p ng-class="p.active ? \'active\' : \'\'">{{p.score}}</p> </md-card> </div> <div class="gridContainer animated fadeIn"> <div id="gridWrapper"> <span ng-repeat="grid in gridData track by $index"> <div class="grid-item" ng-class="{\'active\': grid.active}" data-x="{{grid.x}}" data-y="{{grid.y}}" ng-click="selectGrid(this);">{{grid.value}}</div> </span> </div> </div> <div class="gameController animated fadeIn"> <md-button class="md-fab start-button" aria-label="Eat cake" ng-click="pass()"> Pass </md-button> <md-button class="md-fab submit-button" aria-label="Eat cake" ng-click="submit()"> Submit </md-button> <md-button ng-hide="isBoat" class="md-fab save-button" md-colors="{background: \'indigo\'}" aria-label="Eat cake" ng-click="save()"> Save </md-button> <md-button ng-show="resumeButton" md-colors="{background: \'deep-purple\'}" class="md-fab resume-button" aria-label="Eat cake" ng-click="resume()"> Resume </md-button> </div> </div>'),a.put("views/main.html",'<div ng-controller="MainCtrl" class="mainController"> <div> <div class="animated fadeIn playerCreator"> <md-card md-theme="{{ showDarkTheme ? \'dark-grey\' : \'default\' }}" md-theme-watch> <form name="addPlayer" ng-submit="add()"> <md-input-container> <label>Player</label> <input name="favoriteColor" ng-model="name" required ng-disabled="(isBot || (players.length > 4))"> <div ng-messages="addPlayer.favoriteColor.$error"> <div ng-message="required">Please add player name</div> </div> </md-input-container> <md-button class="md-fab" aria-label="Eat cake" type="submit" ng-hide="(isBot || (players.length > 4))"> Add </md-button> </form> </md-card> <div ng-hide="players.length > 1" class="bot-wrap"> Not have Friend, Play with me. <md-button ng-click="addBot()" class="md-button deep-purple" md-colors="{background: \'deep-purple\'}">Add Bot</md-button> </div> <div class="bot-wrap"> <md-button ng-click="clearPlayers()" ng-show="players.length > 1" class="md-button deep-purple" md-colors="{background: \'deep-purple\'}">Remove All</md-button> <md-button ng-click="resume()" ng-show="resumebutton" class="md-button deep-purple" md-colors="{background: \'deep-purple\'}">Resume Saved</md-button> </div> </div> </div> <div class="animated fadeIn playerList"> <div class="player" ng-repeat="p in players track by $index"> <img src="{{p.avator}}"> <p>{{p.name}}</p> </div> </div> <div class="startWrap" ng-show="players.length > 1"> <md-button class="md-primary startGame" ng-click="startGame()">Start New Game</md-button> </div> </div>')}]);